{"version":3,"sources":["components/SideMenu.js","components/Header.js","components/useForm.js","components/controls/Button.js","components/controls/ActionButton.js","components/controls/Controls.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/Checkbox.js","components/controls/DataPicker.js","services/employeeService.js","pages/Employees/EmployeeForm.js","components/PageHeader.js","components/useTable.js","components/Popup.js","components/Notification.js","components/ConfirmDialog.js","pages/Employees/Employees.js","App/App.js","serviceWorker.js","index.js"],"names":["withStyles","sideMenu","display","flexDirection","position","left","width","height","backgroundColor","props","classes","className","useStyles","makeStyles","theme","root","transform","searchInput","opacity","padding","fontSize","marginRight","spacing","Header","AppBar","Toolbar","Grid","container","alignItems","item","InputBase","placeholder","startAdornment","sm","IconButton","btn","Badge","badgeContent","color","margin","Form","other","children","console","log","autoComplete","label","textTransform","minWidth","secondary","palette","main","primary","Controls","name","value","error","onChange","TextField","variant","helperText","items","FormControl","FormLabel","row","map","FormControlLabel","key","id","control","Radio","title","options","InputLabel","MenuItem","FormHelperText","checked","e","target","convertToDeEventPara","utils","DateFnsUtils","disableToolbar","inputVariant","format","date","text","size","onClick","Button","KEYS","insertEmployee","data","employees","getAllEmployees","localStorage","getItem","setItem","parseInt","toString","generateEmployeeId","push","JSON","stringify","parse","departments","x","department","departmentId","genderItems","initialValues","fullName","email","mobile","city","gender","hireDate","Date","isPermanent","EmployeeForm","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","test","length","setErrors","Object","every","validateOnChange","React","useState","setValues","handleInputChange","resetForm","useForm","useEffect","onSubmit","preventDefault","xs","type","pageHeader","marginBottom","pageIcon","pageTitle","paddingLeft","PageHeader","subtitle","icon","Paper","elevation","square","Card","Typography","component","table","marginTop","fontWeight","cursor","useTable","records","headCells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","event","newPage","handleChangeRowsPerPage","descendingComparator","a","b","TblContainer","Table","TblHead","TableHead","TableRow","headCell","TableCell","sortDirection","disabledSorting","TableSortLabel","active","direction","cellId","TblPagination","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","el","index","sort","stableSort","fn","getComparator","slice","dialogWrapper","top","dialogTitle","paddingRight","Popup","openPopup","setOpenPopup","Dialog","open","maxWidth","paper","DialogTitle","style","flexGrow","DialogContent","dividers","Notification","notify","setNotify","handleClose","reason","isOpen","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","severity","message","dialog","textAlign","dialogContent","dialogAction","justifyContent","titleIcon","light","ConfirmDialog","confirmDialog","setConfirmDialog","disableRipple","subTitle","DialogActions","onConfirm","pageContent","newButton","right","Employees","setRecordForEdit","employeeService","setRecords","setFilterFn","onDelete","filter","InputProps","InputAdornment","toLowerCase","includes","startIcon","TableBody","openInPopup","employee","recordIndex","findIndex","appMain","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0e464ddf.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\n\r\nimport { withStyles } from '@material-ui/core'\r\n\r\n\r\n\r\nconst style = {\r\n    sideMenu : {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        position: \"absolute\",\r\n        left: \"0px\",\r\n        width: \"320px\",\r\n        height: \"100%\",\r\n        backgroundColor: \"blanchedalmond\"\r\n    }\r\n}\r\n\r\nconst SideMenu = (props) => {\r\n    const {classes} = props\r\n\r\n    return (\r\n        <div className={classes.sideMenu}>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(style)(SideMenu);","import React from 'react'\r\n\r\nimport { AppBar, Toolbar, Grid, InputBase, IconButton, Badge } from '@material-ui/core'\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone'\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline'\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        position: 'static',\r\n        transform: 'translateZ(0)',\r\n        backgroundColor: '#fff'\r\n    },\r\n    searchInput: {\r\n        opacity: '0.6',\r\n        padding: '0px 8px',\r\n        fontSize: '0.8rem',\r\n        '&:hover': {\r\n            backgroundColor: 'f2f2f2'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            marginRight: theme.spacing(1)\r\n        }\r\n    }\r\n}))\r\n  \r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar className={classes.root}>\r\n            <Toolbar>\r\n                <Grid container alignItems=\"center\">\r\n                    <Grid item >\r\n                        <InputBase\r\n                            placeholder=\"Search topics\"\r\n                            className={classes.searchInput}\r\n                            startAdornment={<SearchIcon fontSize=\"small\"/>}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm></Grid>\r\n                    <Grid item>\r\n                        <IconButton className={classes.btn}>\r\n                            <Badge badgeContent={4} color=\"secondary\">\r\n                                <NotificationsNoneIcon fontSize=\"small\"/>\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <Badge badgeContent={3} color=\"primary\">\r\n                                <ChatBubbleOutlineIcon fontSize=\"small\"/>\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <PowerSettingsNewIcon fontSize=\"small\"/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport function useForm(initialValues, validateOnChange=false, validate) {\r\n\r\n    const [values, setValues] = React.useState(initialValues);\r\n    const [errors, setErrors] = React.useState({});\r\n\r\n    const handleInputChange = e => {\r\n        const {name, value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n        if(validateOnChange)\r\n        validate({[name] : value})\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues(initialValues)\r\n        setErrors({})\r\n    }\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiFormControl-root': {\r\n            width: '80%',\r\n            margin: theme.spacing(1)\r\n        }\r\n    }\r\n}))\r\n\r\nexport function Form(props) {\r\n\r\n    const classes = useStyles();\r\n    const {children, ...other} = props\r\n\r\n    console.log({...other})\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\" {...other}>\r\n            {props.children}\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button as MuiButton, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    label: {\r\n        textTransform: 'none'\r\n    }\r\n}))\r\n\r\nexport default function Button(props) {\r\n\r\n    const classes = useStyles();\r\n    const {text, size, color, variant, onClick, ...other} = props\r\n\r\n    return (\r\n        <MuiButton\r\n            variant={variant || \"contained\"}\r\n            size={size || \"large\"}\r\n            color={color || \"primary\"}\r\n            onClick={onClick}\r\n            {...other}\r\n            classes={{root:classes.root, label:classes.label}}\r\n            >   \r\n            {text}\r\n        </MuiButton>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        minWidth: 0,\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    secondary: {\r\n        backgroundColor: 'white',\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.secondary.main,\r\n        }\r\n    },\r\n    primary: {\r\n        backgroundColor: 'white',\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.primary.main,\r\n        }\r\n    },\r\n}))\r\n\r\n\r\nexport default function ActionButton(props) {\r\n\r\n    const { color, children, onClick } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            className={`${classes.root} ${classes[color]}`}\r\n            onClick={onClick}>\r\n            {children}\r\n        </Button>\r\n    )\r\n}\r\n","import Input from \"./Input\";\r\nimport RadioGroup from \"./RadioGroup\";\r\nimport Select from \"./Select\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport DataPicker from './DataPicker'\r\nimport Button from './Button'\r\nimport ActionButton from './ActionButton'\r\n\r\n\r\nexport const Controls = {\r\n    Input,\r\n    RadioGroup,\r\n    Select,\r\n    Checkbox,\r\n    DataPicker,\r\n    Button,\r\n    ActionButton\r\n}","import React from 'react'\r\n\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport default function Input(props) {\r\n\r\n    const {name, label, value, error=null, onChange, ...other } = props\r\n    return (\r\n        <TextField\r\n            variant=\"outlined\"\r\n            label={label}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            {...other}\r\n            {...(error && {error:true,helperText:error})}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { FormControl, FormLabel, RadioGroup as MuiRadioGroup, FormControlLabel, Radio } from '@material-ui/core';\r\n\r\nexport default function RadioGroup(props) {\r\n\r\n    const {name, label, value, onChange, items} = props\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormLabel>{label}</FormLabel>\r\n            <MuiRadioGroup row\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}\r\n            >   \r\n                {\r\n                    items.map(\r\n                        item=> (\r\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title}/>\r\n                        )\r\n                    )\r\n                }\r\n            </MuiRadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { FormControl, FormHelperText, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core'\r\n\r\nexport default function Select(props) {\r\n\r\n    const {name, label, value, error = null, onChange, options} = props\r\n\r\n    return (\r\n        <FormControl\r\n            variant=\"outlined\"\r\n            {...(error && {error:true})}\r\n        >\r\n            <InputLabel>{label}</InputLabel>\r\n            <MuiSelect\r\n                label={label}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}\r\n            >\r\n                <MenuItem value=\"\">None</MenuItem>\r\n                {\r\n                    options.map(\r\n                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                    )\r\n                }\r\n            </MuiSelect>\r\n            {error && <FormHelperText>{error}</FormHelperText>}\r\n        </FormControl>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@material-ui/core';\r\n\r\nexport default function Checkbox(props) {\r\n\r\n    const {name, label, value, onChange} = props;\r\n\r\n    const convertToDeEventPara = (name, value) => ({\r\n        target: {\r\n            name, value\r\n        }\r\n    })\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormControlLabel\r\n                control={<MuiCheckbox \r\n                    name={name}\r\n                    color=\"primary\"\r\n                    checked={value}\r\n                    onChange={e => onChange(convertToDeEventPara(name, e.target.checked))}\r\n                />}\r\n                label={label}\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\n\r\nexport default function DataPicker(props) {\r\n\r\n    const { name, label, value, onChange } = props\r\n\r\n    const convertToDeEventPara = (name, value) => ({\r\n        target: {\r\n            name, value\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker disableToolbar variant=\"inline\" inputVariant=\"outlined\"\r\n                label={label}\r\n                format=\"MMM/dd/yyyy\"\r\n                name={name}\r\n                value={value}\r\n                onChange={date => onChange(convertToDeEventPara(name, date))}\r\n            >\r\n\r\n            </KeyboardDatePicker>\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n","const KEYS = {\r\n    employees: 'employees',\r\n    employeeId: 'employeeId'\r\n}\r\n\r\nexport const getDepartmentCollection = () => ([\r\n    {id: '1', title: 'Development'},\r\n    {id: '2', title: 'Marketing'},\r\n    {id: '3', title: 'Accounting'},\r\n    {id: '4', title: 'HR'},\r\n])\r\n\r\nexport function insertEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    data[\"id\"] = generateEmployeeId()\r\n    employees.push(data)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\r\n}\r\n\r\nexport function updateEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    let recordIndex = employees.findIndex(x => x.id === data.id)\r\n    employees[recordIndex] = {...data}\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\r\n}\r\n\r\nexport function deleteEmployee(id) {\r\n    let employees = getAllEmployees();\r\n    employees = employees.filter(x => x.id !== id)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function generateEmployeeId() {\r\n    if (localStorage.getItem(KEYS.employeeId) == null)\r\n        localStorage.setItem(KEYS.employeeId, '0')\r\n    let id = parseInt(localStorage.getItem(KEYS.employeeId))\r\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\r\n    return id\r\n}\r\n\r\nexport function getAllEmployees() {\r\n    if (localStorage.getItem(KEYS.employees) == null)\r\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\r\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\r\n    console.log(employees)\r\n    let departments = getDepartmentCollection();\r\n    return employees.map(x => ({\r\n        ...x,\r\n        department: departments[x.departmentId - 1].title\r\n    }))\r\n}","import React from 'react'\r\n\r\nimport {useForm, Form} from '../../components/useForm'\r\nimport {Controls} from '../../components/controls/Controls'\r\n\r\nimport * as employeeService from '../../services/employeeService'\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst genderItems = [\r\n    {id: 'male', title: 'Male'},\r\n    {id: 'female', title: 'Female'},\r\n]\r\n\r\n\r\nconst initialValues = {\r\n    id: 0,\r\n    fullName: '',\r\n    email: '',\r\n    mobile: '',\r\n    city: '',\r\n    gender: 'male',\r\n    departmentId: '',\r\n    hireDate: new Date(),\r\n    isPermanent: false\r\n}\r\n\r\n\r\nexport default function EmployeeForm(props) {\r\n    const {addOrEdit, recordForEdit} = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = {...errors}\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid\"\r\n        if ('mobile' in fieldValues)\r\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required\"\r\n        if ('departmentId' in fieldValues)\r\n            temp.departmentId = fieldValues.departmentId.length!==0 ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n\r\n    const { \r\n        values, \r\n        setValues, \r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialValues, true, validate)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()){\r\n            addOrEdit(values, resetForm)\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (recordForEdit !== null)\r\n        setValues({\r\n            ...recordForEdit\r\n        })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        name=\"fullName\"\r\n                        label=\"Full Name\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        error = {errors.fullName}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error = {errors.email}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Mobile\"\r\n                        name=\"mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                        error = {errors.mobile}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"City\"\r\n                        name=\"city\"\r\n                        value={values.city}\r\n                        onChange={handleInputChange}\r\n                        error = {errors.city}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Controls.RadioGroup\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        value={values.gender}\r\n                        onChange={handleInputChange}\r\n                        items={genderItems}\r\n                    />\r\n                    <Controls.Select\r\n                        name=\"departmentId\"\r\n                        label=\"Department\"\r\n                        value={values.departmentId}\r\n                        onChange={handleInputChange}\r\n                        options={employeeService.getDepartmentCollection()}\r\n                        error={errors.departmentId}\r\n                    />\r\n                    <Controls.DataPicker\r\n                        name=\"hireDate\"\r\n                        label=\"Hire Date\"\r\n                        value={values.hireDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Controls.Checkbox\r\n                        name=\"isPermanent\"\r\n                        label=\"Permanent Employee\"\r\n                        value={values.isPermanent}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\"\r\n                        />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm}\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {Paper, Card, Typography, makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: '#fdfdff'\r\n    },\r\n    pageHeader: {\r\n        padding: theme.spacing(4),\r\n        display: 'flex',\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    pageIcon: {\r\n        display: 'inline-block',\r\n        padding: theme.spacing(2),\r\n        color: '#3c44b1'\r\n    },\r\n    pageTitle: {\r\n        paddingLeft: theme.spacing(4),\r\n        '& .MuiTypography-subtitle2': {\r\n            opacity: '0.6'\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function PageHeader(props) {\r\n\r\n    const classes = useStyles()\r\n    const {title, subtitle, icon} = props;\r\n    return (\r\n        <div>\r\n            <Paper elevation={0} square className={classes.root}>\r\n                <div className={classes.pageHeader}>\r\n                    <Card className={classes.pageIcon}>\r\n                        {icon}\r\n                    </Card>\r\n                    <div className={classes.pageTitle}>\r\n                        <Typography\r\n                            variant=\"h6\"\r\n                            component=\"div\"\r\n                        >\r\n                            {title}\r\n                        </Typography>\r\n                        <Typography\r\n                            variant=\"subtitle2\"\r\n                            component=\"div\"\r\n                        >\r\n                            {subtitle}\r\n                        </Typography>\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Table, TableCell, TableHead, TableRow, makeStyles, TablePagination, TableSortLabel } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    table: {\r\n        marginTop: theme.spacing(3),\r\n        '& thead th': {\r\n            fontWeight: '600',\r\n            color: theme.palette.primary.main,\r\n            backgroundColor: '#E1E3F4'\r\n        },\r\n        '& tbody th': {\r\n            fontWeight: '300'\r\n        },\r\n        '& tbody tr:hover': {\r\n            backgroundColor: '#fffbf2',\r\n            cursor: 'pointer'\r\n        }\r\n\r\n    }\r\n}))\r\n\r\nexport default function useTable(records, headCells, filterFn) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const pages = [5, 10, 25]\r\n    const [page, setPage] = React.useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(pages[page])\r\n    const [order, setOrder] = React.useState()\r\n    const [orderBy, setOrderBy] = React.useState()\r\n\r\n\r\n    const TblContainer = props => (\r\n        <Table className={classes.table}>\r\n            {props.children}\r\n        </Table>\r\n    )\r\n\r\n    const handleSortRequest = cellId => {\r\n        const isAsc = orderBy === cellId && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc')\r\n        setOrderBy(cellId)\r\n    }\r\n\r\n    const TblHead = props => {\r\n        return (\r\n            <TableHead>\r\n                <TableRow>\r\n                {\r\n                    headCells.map(headCell => (\r\n                        <TableCell key={headCell.id}\r\n                            sortDirection={orderBy === headCell.id ? order : false}>\r\n                            {headCell.disabledSorting ? headCell.label :\r\n                                <TableSortLabel\r\n                                    active={orderBy === headCell.id}\r\n                                    direction={orderBy === headCell.id ? order : 'asc'}\r\n                                    onClick={() => { handleSortRequest(headCell.id) }}>\r\n                                    {headCell.label}\r\n                                </TableSortLabel>\r\n                            }\r\n                        </TableCell>))\r\n                }\r\n                </TableRow>\r\n            </TableHead>\r\n        )\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage)\r\n    }\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10))\r\n        setPage(0)\r\n    }\r\n\r\n    const TblPagination = () => (\r\n        <TablePagination \r\n            component = \"div\"\r\n            page={page}\r\n            rowsPerPageOptions = {pages}\r\n            rowsPerPage={rowsPerPage}\r\n            count={records.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n    )\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1]\r\n        });\r\n        return stabilizedThis.map((el) => el[0])\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const recordsAfterPagingAndSorting = () => {\r\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy))\r\n            .slice(page*rowsPerPage,(page+1)*rowsPerPage)\r\n    }\r\n\r\n    return {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, makeStyles, Typography } from '@material-ui/core';\r\nimport {Controls} from '../components/controls/Controls'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    }\r\n}))\r\n\r\nexport default function Popup(props) {\r\n\r\n    const {title, children, openPopup, setOpenPopup} = props;  \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog open={openPopup} maxWidth=\"md\" classes={{paper: classes.dialogWrapper}}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <div style={{display: 'flex'}}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{flexGrow:1}}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Controls.ActionButton\r\n                        color=\"secondary\"\r\n                        onClick={() => {setOpenPopup(false)}}>\r\n                        <CloseIcon/>\r\n                    </Controls.ActionButton>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <div>{children}</div>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Alert } from '@material-ui/lab'\r\nimport { Snackbar, makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        top: theme.spacing(9)\r\n    }\r\n}))\r\n\r\nexport default function Notification(props) {\r\n\r\n    const {notify, setNotify} = props\r\n    const classes = useStyles();\r\n\r\n    const handleClose = (event, reason) => {\r\n        if(reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setNotify({\r\n            ...notify,\r\n            isOpen: false\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Snackbar\r\n            className={classes.root}\r\n            open = {notify.isOpen}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            onClose={handleClose}\r\n        >\r\n            <Alert severity={notify.type} onClose={handleClose}>\r\n                {notify.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Typography, makeStyles, IconButton } from '@material-ui/core'\r\nimport {Controls} from \"./controls/Controls\";\r\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialog: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogContent: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogAction: {\r\n        justifyContent: 'center'\r\n    },\r\n    titleIcon: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        color: theme.palette.secondary.main,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.secondary.light,\r\n            cursor: 'default'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            fontSize: '8rem',\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function ConfirmDialog(props) {\r\n\r\n    const { confirmDialog, setConfirmDialog } = props;\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Dialog open={confirmDialog.isOpen} classes={{ paper: classes.dialog }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <IconButton disableRipple className={classes.titleIcon}>\r\n                    <NotListedLocationIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent className={classes.dialogContent}>\r\n                <Typography variant=\"h6\">\r\n                    {confirmDialog.title}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">\r\n                    {confirmDialog.subTitle}\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogAction}>\r\n                <Controls.Button\r\n                    text=\"No\"\r\n                    color=\"default\"\r\n                    onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })} />\r\n                <Controls.Button\r\n                    text=\"Yes\"\r\n                    color=\"secondary\"\r\n                    onClick={confirmDialog.onConfirm} />\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport EmployeeForm from './EmployeeForm'\r\nimport PageHeader from '../../components/PageHeader'\r\nimport useTable from '../../components/useTable'\r\nimport {Controls} from '../../components/controls/Controls'\r\nimport Popup from '../../components/Popup'\r\nimport Notification from '../../components/Notification'\r\n\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport * as employeeService from '../../services/employeeService'\r\nimport {Search} from '@material-ui/icons'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport ConfirmDialog from '../../components/ConfirmDialog'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3),\r\n    },\r\n    searchInput: {\r\n        width: '75%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    }\r\n}))\r\n\r\nconst headCells = [\r\n    {id: 'fullName', label: 'Employee Name'},\r\n    {id: 'email', label: 'Email Address (Personal)'},\r\n    {id: 'mobile', label: 'Mobile Number'},\r\n    {id: 'department', label: 'Department', disabledSorting: true},\r\n    {id: 'actions', label: 'Actions', disabledSorting: true}\r\n]\r\n\r\n\r\nexport default function Employees() {\r\n\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = React.useState(null)\r\n    const [records, setRecords] = React.useState(employeeService.getAllEmployees())\r\n    const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = React.useState(false)\r\n    const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' })\r\n    const [confirmDialog, setConfirmDialog] = React.useState({ isOpen: false, title: '', subTitle: '' })\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(records, headCells, filterFn);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value === \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.fullName.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    const addOrEdit = (employee, resetForm) => {\r\n        if (employee.id === 0)\r\n            employeeService.insertEmployee(employee)\r\n        else\r\n            employeeService.updateEmployee(employee)\r\n        resetForm()\r\n        setRecordForEdit(null)\r\n        setOpenPopup(false)\r\n        setRecords(employeeService.getAllEmployees())\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'Submitted Successfully',\r\n            type: 'success'\r\n        })\r\n    }\r\n\r\n    const openInPopup = item => {\r\n        setRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const onDelete = id => {\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n        employeeService.deleteEmployee(id);\r\n        setRecords(employeeService.getAllEmployees())\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'Deleted Successfully',\r\n            type: 'error'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageHeader\r\n                title=\"Page Header\"\r\n                subtitle=\"Form design with validation\"\r\n                icon={<PeopleIcon fontSize=\"large\"/>}\r\n            />\r\n            <Paper className={classes.pageContent}>\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search Employees\"\r\n                        className={classes.searchInput}\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <Search/>\r\n                            </InputAdornment>)\r\n                        }}\r\n                        onChange={handleSearch}\r\n                    />\r\n                    <Controls.Button\r\n                        className={classes.newButton}\r\n                        text = \"Add New\"\r\n                        variant = \"outlined\"\r\n                        startIcon = {<AddIcon/>}\r\n                        onClick={() => {setOpenPopup(true);setRecordForEdit(null);}}\r\n                    />\r\n                </Toolbar>\r\n                <TblContainer>  \r\n                    <TblHead/>\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map(item => \r\n                            (\r\n                                <TableRow key={item.id}>\r\n                                    <TableCell>{item.fullName}</TableCell>\r\n                                    <TableCell>{item.email}</TableCell>\r\n                                    <TableCell>{item.mobile}</TableCell>\r\n                                    <TableCell>{item.department}</TableCell>\r\n                                    <TableCell>\r\n                                        <Controls.ActionButton color=\"primary\" onClick={() => {openInPopup(item)}}>\r\n                                            <EditOutlinedIcon fontSize=\"small\"/>\r\n                                        </Controls.ActionButton>\r\n                                        <Controls.ActionButton color=\"secondary\" onClick={() => {\r\n                                                setConfirmDialog({\r\n                                                    isOpen: true,\r\n                                                    title: 'Are you sure to delete this record?',\r\n                                                    subTitle: \"You can`t undo this operation\",\r\n                                                    onConfirm: () => {onDelete(item.id)}\r\n                                                })\r\n                                            }}>\r\n                                            <CloseIcon/>\r\n                                        </Controls.ActionButton>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination/>\r\n            </Paper>\r\n            <Popup\r\n                title=\"Employee Form\"\r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n            >\r\n                <EmployeeForm recordForEdit={recordForEdit} addOrEdit={addOrEdit}/>\r\n            </Popup>\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\n\nimport SideMenu from '../components/SideMenu'\nimport Header from '../components/Header'\nimport Employees from '../pages/Employees/Employees'\n\nimport { makeStyles } from '@material-ui/core';\n\n\n\nconst useStyles = makeStyles({\n  appMain: {\n    paddingLeft: '320px',\n    width: '100%'\n  }\n})\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <SideMenu/>\n      <div className={classes.appMain}>\n        <Header/>\n        <Employees/>\n      </div>\n      \n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}